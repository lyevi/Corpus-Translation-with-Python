#可批量转换docx文件为txt文件，两类文本分别储存在两个文件夹，可自由选择文件夹路径的代码
#导入os库，导入win32com库、调用win32com.client.dispatch模块
import os
import win32com
from win32com.client import Dispatch, constants
#自定义函数docx2txt，包括两个变量：放docx文件的原文件夹sourcefolder、放转换后的txt文件的目标文件夹targetfolder
def docx2txt(sourcefolder, targetfolder):
    #自定义变量docx_name_list，函数os.listdir()返回原文件夹里的文件名列表
    docx_name_list = os.listdir(sourcefolder)
    #遍历文件名列表，每一个文件名赋值给变量element
    for element in docx_name_list:
        #变量原文件sourcefile=函数os.path.splitext()分开每个文件名和拓展名，即print(sourcefile)返回（filename,extension）
        sourcefile = os.path.splitext(element)
        filename = sourcefile[0]
        extension = sourcefile[1]
        #如果拓展名不是.docx，停止当前文件，继续遍历下一个文件，直到有.docx文件
        if extension != '.docx':
            continue
        #原文件路径=原文件夹路径+\\+文件名+拓展名
        sourcefilepath = sourcefolder + "\\"+filename + extension
        print("原文本路径"+sourcefilepath)
#调用win32com.client.dispatch的word工具，open函数打开.docx的文件
        wordtool = win32com.client.Dispatch('Word.Application')
        doc = wordtool.Documents.Open(sourcefilepath)
#目标文件路径=目标文件夹+\\+文件名，文件名可以与原文件相同，也可以自己修改。此处为与原文件名相同
        targetfilepath = targetfolder + "\\" + filename
        #将原文件格式，调用保存函数SaveAs（目标文件路径，格式），4是纯文本格式
        doc.SaveAs(targetfilepath, 4)
        print("目标文件路径"+targetfilepath)
#关闭文档流
        doc.Close()
# 在控制台自由输入原文件夹路径path1，我的是D:\Corpus Project\UN2015CE-docx
# 在控制台自由输入目标文件夹路径path2，我的是D:\Corpus Project\UN2015CE-UTF-8
path1 = input()
path2 = input()
docx2txt(path1, path2)
